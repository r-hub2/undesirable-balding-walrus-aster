
useDynLib(aster, .registration = TRUE, .fixes = "C_")

export(famfun)
export(rnzp)
export(rktp)
export(rktnb)
export(raster)
export(mlogl)
export(aster)
export(summary.aster)
export(predict.aster)
export(fam.bernoulli)
export(fam.poisson)
export(fam.truncated.poisson)
export(fam.negative.binomial)
export(fam.normal.location)
export(fam.truncated.negative.binomial)
export(fam.default)
export(penmlogl)
export(penmlogl2)
export(pickle)
export(astertransform)
export(reaster)
export(summary.reaster)
export(anovaAsterOrReasterList)
export(pickle1)
export(pickle2)
export(pickle3)
export(makezwz)
export(newpickle)
export(quickle)
export(objfun.factory)

import(trust)

S3method(anova, asterOrReaster)
S3method(aster, default)
S3method(aster, formula)
S3method(print, summary.aster)
S3method(print, summary.reaster)
S3method(as.character, astfam)
S3method(print, astfam)
S3method(predict, aster)
S3method(predict, aster.formula)
S3method(summary, aster)
S3method(summary, reaster)
S3method(vcov, aster)
S3method(vcov, reaster)

S3method(reaster, default)
S3method(reaster, formula)

importFrom(stats, .getXlevels)
importFrom(stats, is.empty.model)
importFrom(stats, model.matrix)
importFrom(stats, model.response)
importFrom(stats, na.fail)
importFrom(stats, lm)
importFrom(stats, nlm)
importFrom(stats, optim)
importFrom(stats, pchisq)
importFrom(stats, pnorm)
importFrom(stats, printCoefmat)

